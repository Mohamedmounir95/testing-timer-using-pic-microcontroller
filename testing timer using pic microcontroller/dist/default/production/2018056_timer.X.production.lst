

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 12 23:10:44 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172  06DE                     __pidataBANK0:
   173                           
   174                           ;initializer for main@F854
   175  06DE  34FC               	retlw	252
   176  06DF  3460               	retlw	96
   177  06E0  34DA               	retlw	218
   178  06E1  34F2               	retlw	242
   179  06E2  3400               	retlw	0
   180  06E3  3400               	retlw	0
   181  06E4  3400               	retlw	0
   182  06E5  3400               	retlw	0
   183  06E6  3400               	retlw	0
   184  06E7  3400               	retlw	0
   185                           
   186                           ;initializer for main@F851
   187  06E8  34FC               	retlw	252
   188  06E9  3460               	retlw	96
   189  06EA  34DA               	retlw	218
   190  06EB  34F2               	retlw	242
   191  06EC  3466               	retlw	102
   192  06ED  34B6               	retlw	182
   193  06EE  34BE               	retlw	190
   194  06EF  34E0               	retlw	224
   195  06F0  34FE               	retlw	254
   196  06F1  34F6               	retlw	246
   197  000E                     _TMR1	set	14
   198  0008                     _PORTD	set	8
   199  0006                     _PORTB	set	6
   200  0080                     _TMR1ON	set	128
   201  0085                     _T1CKPS1	set	133
   202  0084                     _T1CKPS0	set	132
   203  0083                     _T1OSCEN	set	131
   204  0082                     _T1SYNC	set	130
   205  0081                     _TMR1CS	set	129
   206  0088                     _TRISD	set	136
   207  0086                     _TRISB	set	134
   208                           
   209                           	psect	cinit
   210  07EE                     start_initialization:	
   211                           ; #config settings
   212                           
   213  07EE                     __initialization:
   214                           
   215                           ; Initialize objects allocated to BANK0
   216  07EE  1383               	bcf	3,7	;select IRP bank0
   217  07EF  304A               	movlw	low (__pdataBANK0+20)
   218  07F0  00FD               	movwf	btemp+-1
   219  07F1  3006               	movlw	high __pidataBANK0
   220  07F2  00FE               	movwf	btemp
   221  07F3  30DE               	movlw	low __pidataBANK0
   222  07F4  00FF               	movwf	btemp+1
   223  07F5  3036               	movlw	low __pdataBANK0
   224  07F6  0084               	movwf	4
   225  07F7  120A  118A  26CF  120A  118A  	fcall	init_ram0
   226  07FC                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229  07FC                     __end_of__initialization:
   230  07FC  0183               	clrf	3
   231  07FD  120A  118A  2F70   	ljmp	_main	;jump to C main() function
   232                           
   233                           	psect	dataBANK0
   234  0036                     __pdataBANK0:
   235  0036                     main@F854:
   236  0036                     	ds	10
   237  0040                     main@F851:
   238  0040                     	ds	10
   239                           
   240                           	psect	inittext
   241  06CB                     init_fetch0:	
   242                           ;	Called with low address in FSR and high address in W
   243                           
   244  06CB  087E               	movf	btemp,w
   245  06CC  008A               	movwf	10
   246  06CD  087F               	movf	btemp+1,w
   247  06CE  0082               	movwf	2
   248  06CF                     init_ram0:	
   249                           ;Called with:
   250                           ;	high address of idata address in btemp 
   251                           ;	low address of idata address in btemp+1 
   252                           ;	low address of data in FSR
   253                           ;	high address + 1 of data in btemp-1
   254                           
   255  06CF  120A  118A  26CB  120A  118A  	fcall	init_fetch0
   256  06D4  0080               	movwf	0
   257  06D5  0A84               	incf	4,f
   258  06D6  0804               	movf	4,w
   259  06D7  067D               	xorwf	btemp+-1,w
   260  06D8  1903               	btfsc	3,2
   261  06D9  3400               	retlw	0
   262  06DA  0AFF               	incf	btemp+1,f
   263  06DB  1903               	btfsc	3,2
   264  06DC  0AFE               	incf	btemp,f
   265  06DD  2ECF               	goto	init_ram0
   266                           
   267                           	psect	cstackCOMMON
   268  0070                     __pcstackCOMMON:
   269  0070                     ?_main:
   270  0070                     ?___lwdiv:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?___lwmod:	
   274                           ; 2 bytes @ 0x0
   275                           
   276  0070                     ___lwdiv@divisor:	
   277                           ; 2 bytes @ 0x0
   278                           
   279  0070                     ___lwmod@divisor:	
   280                           ; 2 bytes @ 0x0
   281                           
   282                           
   283                           ; 2 bytes @ 0x0
   284  0070                     	ds	2
   285  0072                     ___lwdiv@dividend:
   286  0072                     ___lwmod@dividend:	
   287                           ; 2 bytes @ 0x2
   288                           
   289                           
   290                           ; 2 bytes @ 0x2
   291  0072                     	ds	2
   292  0074                     ??___lwdiv:
   293  0074                     ??___lwmod:	
   294                           ; 1 bytes @ 0x4
   295                           
   296                           
   297                           ; 1 bytes @ 0x4
   298  0074                     	ds	1
   299  0075                     ___lwmod@counter:
   300  0075                     ___lwdiv@quotient:	
   301                           ; 1 bytes @ 0x5
   302                           
   303                           
   304                           ; 2 bytes @ 0x5
   305  0075                     	ds	2
   306  0077                     ___lwdiv@counter:
   307                           
   308                           ; 1 bytes @ 0x7
   309  0077                     	ds	1
   310  0078                     ??_main:
   311                           
   312                           ; 1 bytes @ 0x8
   313  0078                     	ds	4
   314                           
   315                           	psect	cstackBANK0
   316  0020                     __pcstackBANK0:
   317  0020                     main@segments_code:
   318                           
   319                           ; 10 bytes @ 0x0
   320  0020                     	ds	10
   321  002A                     main@segments_code1:
   322                           
   323                           ; 10 bytes @ 0xA
   324  002A                     	ds	10
   325  0034                     main@counter:
   326                           
   327                           ; 1 bytes @ 0x14
   328  0034                     	ds	1
   329  0035                     main@counter1:
   330                           
   331                           ; 1 bytes @ 0x15
   332  0035                     	ds	1
   333                           
   334                           	psect	maintext
   335  0770                     __pmaintext:	
   336 ;;
   337 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   338 ;;
   339 ;; *************** function _main *****************
   340 ;; Defined at:
   341 ;;		line 11 in file "newmain.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;  segments_cod   10   10[BANK0 ] unsigned char [10]
   346 ;;  segments_cod   10    0[BANK0 ] unsigned char [10]
   347 ;;  counter1        1   21[BANK0 ] unsigned char 
   348 ;;  counter         1   20[BANK0 ] unsigned char 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : B00/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   358 ;;      Params:         0       0       0       0       0
   359 ;;      Locals:         0      22       0       0       0
   360 ;;      Temps:          4       0       0       0       0
   361 ;;      Totals:         4      22       0       0       0
   362 ;;Total ram usage:       26 bytes
   363 ;; Hardware stack levels required when called: 1
   364 ;; This function calls:
   365 ;;		___lwdiv
   366 ;;		___lwmod
   367 ;; This function is called by:
   368 ;;		Startup code after reset
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           
   373                           ;psect for function _main
   374  0770                     _main:
   375  0770                     l751:	
   376                           ;incstack = 0
   377                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   378                           
   379                           
   380                           ;newmain.c: 12:     TRISB = 0x00;
   381  0770  1683               	bsf	3,5	;RP0=1, select bank1
   382  0771  1303               	bcf	3,6	;RP1=0, select bank1
   383  0772  0186               	clrf	6	;volatile
   384                           
   385                           ;newmain.c: 13:     PORTB = 0x00;
   386  0773  1283               	bcf	3,5	;RP0=0, select bank0
   387  0774  1303               	bcf	3,6	;RP1=0, select bank0
   388  0775  0186               	clrf	6	;volatile
   389                           
   390                           ;newmain.c: 14:     TRISD = 0x00;
   391  0776  1683               	bsf	3,5	;RP0=1, select bank1
   392  0777  1303               	bcf	3,6	;RP1=0, select bank1
   393  0778  0188               	clrf	8	;volatile
   394                           
   395                           ;newmain.c: 15:     PORTD = 0x00;
   396  0779  1283               	bcf	3,5	;RP0=0, select bank0
   397  077A  1303               	bcf	3,6	;RP1=0, select bank0
   398  077B  0188               	clrf	8	;volatile
   399                           
   400                           ;newmain.c: 18:     TMR1 = 0x00;
   401  077C  018E               	clrf	14	;volatile
   402  077D  018F               	clrf	15	;volatile
   403  077E                     l753:
   404                           
   405                           ;newmain.c: 19:     TMR1CS = 1;
   406  077E  1490               	bsf	16,1	;volatile
   407  077F                     l755:
   408                           
   409                           ;newmain.c: 20:     T1SYNC = 0;
   410  077F  1110               	bcf	16,2	;volatile
   411  0780                     l757:
   412                           
   413                           ;newmain.c: 21:     T1OSCEN = 0;
   414  0780  1190               	bcf	16,3	;volatile
   415  0781                     l759:
   416                           
   417                           ;newmain.c: 22:     T1CKPS0 = 0;
   418  0781  1210               	bcf	16,4	;volatile
   419  0782                     l761:
   420                           
   421                           ;newmain.c: 23:     T1CKPS1 = 0;
   422  0782  1290               	bcf	16,5	;volatile
   423  0783                     l763:
   424                           
   425                           ;newmain.c: 24:     TMR1ON = 1;
   426  0783  1410               	bsf	16,0	;volatile
   427  0784                     l765:
   428                           
   429                           ;newmain.c: 26: unsigned char segments_code[10] = {0xFC,0x60,0xDA,0xF2,0x66,0xB6,0xBE,0x
      +                          E0,0xFE,0xF6};
   430  0784  3020               	movlw	main@segments_code& (0+255)
   431  0785  0084               	movwf	4
   432  0786  3040               	movlw	low main@F851
   433  0787  00F8               	movwf	??_main
   434  0788  0804               	movf	4,w
   435  0789  00F9               	movwf	??_main+1
   436  078A  300A               	movlw	10
   437  078B  00FA               	movwf	??_main+2
   438  078C                     u300:
   439  078C  0878               	movf	??_main,w
   440  078D  0084               	movwf	4
   441  078E  1383               	bcf	3,7	;select IRP bank0
   442  078F  0800               	movf	0,w
   443  0790  00FB               	movwf	??_main+3
   444  0791  0AF8               	incf	??_main,f
   445  0792  0879               	movf	??_main+1,w
   446  0793  0084               	movwf	4
   447  0794  087B               	movf	??_main+3,w
   448  0795  0080               	movwf	0
   449  0796  0AF9               	incf	??_main+1,f
   450  0797  0BFA               	decfsz	??_main+2,f
   451  0798  2F8C               	goto	u300
   452  0799                     l767:
   453                           
   454                           ;newmain.c: 27: unsigned char counter=0;
   455  0799  01B4               	clrf	main@counter
   456                           
   457                           ;newmain.c: 28: unsigned char segments_code1[10] = {0xFC,0x60,0xDA,0xF2};
   458  079A  302A               	movlw	main@segments_code1& (0+255)
   459  079B  0084               	movwf	4
   460  079C  3036               	movlw	low main@F854
   461  079D  00F8               	movwf	??_main
   462  079E  0804               	movf	4,w
   463  079F  00F9               	movwf	??_main+1
   464  07A0  300A               	movlw	10
   465  07A1  00FA               	movwf	??_main+2
   466  07A2                     u310:
   467  07A2  0878               	movf	??_main,w
   468  07A3  0084               	movwf	4
   469  07A4  1383               	bcf	3,7	;select IRP bank0
   470  07A5  0800               	movf	0,w
   471  07A6  00FB               	movwf	??_main+3
   472  07A7  0AF8               	incf	??_main,f
   473  07A8  0879               	movf	??_main+1,w
   474  07A9  0084               	movwf	4
   475  07AA  087B               	movf	??_main+3,w
   476  07AB  0080               	movwf	0
   477  07AC  0AF9               	incf	??_main+1,f
   478  07AD  0BFA               	decfsz	??_main+2,f
   479  07AE  2FA2               	goto	u310
   480  07AF                     l769:
   481                           
   482                           ;newmain.c: 29: unsigned char counter1=0;
   483  07AF  01B5               	clrf	main@counter1
   484  07B0                     l771:
   485                           
   486                           ;newmain.c: 31: {;newmain.c: 32:     if (TMR1<31)
   487  07B0  3000               	movlw	0
   488  07B1  020F               	subwf	15,w	;volatile
   489  07B2  301F               	movlw	31
   490  07B3  1903               	skipnz
   491  07B4  020E               	subwf	14,w	;volatile
   492  07B5  1803               	skipnc
   493  07B6  2FB8               	goto	u321
   494  07B7  2FB9               	goto	u320
   495  07B8                     u321:
   496  07B8  2FB0               	goto	l771
   497  07B9                     u320:
   498  07B9                     l773:
   499                           
   500                           ;newmain.c: 33:     {;newmain.c: 34:             PORTB = segments_code[counter];
   501  07B9  0834               	movf	main@counter,w
   502  07BA  3E20               	addlw	(low (main@segments_code| 0))& (0+255)
   503  07BB  0084               	movwf	4
   504  07BC  1383               	bcf	3,7	;select IRP bank0
   505  07BD  0800               	movf	0,w
   506  07BE  0086               	movwf	6	;volatile
   507                           
   508                           ;newmain.c: 35:             PORTD = segments_code1[counter1];
   509  07BF  0835               	movf	main@counter1,w
   510  07C0  3E2A               	addlw	(low (main@segments_code1| 0))& (0+255)
   511  07C1  0084               	movwf	4
   512  07C2  0800               	movf	0,w
   513  07C3  0088               	movwf	8	;volatile
   514  07C4                     l775:
   515                           
   516                           ;newmain.c: 36:             counter=TMR1%10;
   517  07C4  300A               	movlw	10
   518  07C5  00F0               	movwf	___lwmod@divisor
   519  07C6  3000               	movlw	0
   520  07C7  00F1               	movwf	___lwmod@divisor+1
   521  07C8  080F               	movf	15,w	;volatile
   522  07C9  00F3               	movwf	___lwmod@dividend+1
   523  07CA  080E               	movf	14,w	;volatile
   524  07CB  00F2               	movwf	___lwmod@dividend
   525  07CC  120A  118A  26F2  120A  118A  	fcall	___lwmod
   526  07D1  0870               	movf	?___lwmod,w
   527  07D2  00F8               	movwf	??_main
   528  07D3  0878               	movf	??_main,w
   529  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   530  07D5  1303               	bcf	3,6	;RP1=0, select bank0
   531  07D6  00B4               	movwf	main@counter
   532  07D7                     l777:
   533                           
   534                           ;newmain.c: 37:             counter1=TMR1/10;
   535  07D7  300A               	movlw	10
   536  07D8  00F0               	movwf	___lwdiv@divisor
   537  07D9  3000               	movlw	0
   538  07DA  00F1               	movwf	___lwdiv@divisor+1
   539  07DB  080F               	movf	15,w	;volatile
   540  07DC  00F3               	movwf	___lwdiv@dividend+1
   541  07DD  080E               	movf	14,w	;volatile
   542  07DE  00F2               	movwf	___lwdiv@dividend
   543  07DF  120A  118A  272C  120A  118A  	fcall	___lwdiv
   544  07E4  0870               	movf	?___lwdiv,w
   545  07E5  00F8               	movwf	??_main
   546  07E6  0878               	movf	??_main,w
   547  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   548  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   549  07E9  00B5               	movwf	main@counter1
   550  07EA  2FB0               	goto	l771
   551  07EB  120A  118A  2800   	ljmp	start
   552  07EE                     __end_of_main:
   553                           
   554                           	psect	text1
   555  06F2                     __ptext1:	
   556 ;; *************** function ___lwmod *****************
   557 ;; Defined at:
   558 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  divisor         2    0[COMMON] unsigned int 
   561 ;;  dividend        2    2[COMMON] unsigned int 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  counter         1    5[COMMON] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  2    0[COMMON] unsigned int 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         4       0       0       0       0
   574 ;;      Locals:         1       0       0       0       0
   575 ;;      Temps:          1       0       0       0       0
   576 ;;      Totals:         6       0       0       0       0
   577 ;;Total ram usage:        6 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function ___lwmod
   588  06F2                     ___lwmod:
   589  06F2                     l729:	
   590                           ;incstack = 0
   591                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   592                           
   593  06F2  0870               	movf	___lwmod@divisor,w
   594  06F3  0471               	iorwf	___lwmod@divisor+1,w
   595  06F4  1903               	btfsc	3,2
   596  06F5  2EF7               	goto	u241
   597  06F6  2EF8               	goto	u240
   598  06F7                     u241:
   599  06F7  2F27               	goto	l747
   600  06F8                     u240:
   601  06F8                     l731:
   602  06F8  01F5               	clrf	___lwmod@counter
   603  06F9  0AF5               	incf	___lwmod@counter,f
   604  06FA  2F06               	goto	l737
   605  06FB                     l733:
   606  06FB  3001               	movlw	1
   607  06FC                     u255:
   608  06FC  1003               	clrc
   609  06FD  0DF0               	rlf	___lwmod@divisor,f
   610  06FE  0DF1               	rlf	___lwmod@divisor+1,f
   611  06FF  3EFF               	addlw	-1
   612  0700  1D03               	skipz
   613  0701  2EFC               	goto	u255
   614  0702                     l735:
   615  0702  3001               	movlw	1
   616  0703  00F4               	movwf	??___lwmod
   617  0704  0874               	movf	??___lwmod,w
   618  0705  07F5               	addwf	___lwmod@counter,f
   619  0706                     l737:
   620  0706  1FF1               	btfss	___lwmod@divisor+1,7
   621  0707  2F09               	goto	u261
   622  0708  2F0A               	goto	u260
   623  0709                     u261:
   624  0709  2EFB               	goto	l733
   625  070A                     u260:
   626  070A                     l739:
   627  070A  0871               	movf	___lwmod@divisor+1,w
   628  070B  0273               	subwf	___lwmod@dividend+1,w
   629  070C  1D03               	skipz
   630  070D  2F10               	goto	u275
   631  070E  0870               	movf	___lwmod@divisor,w
   632  070F  0272               	subwf	___lwmod@dividend,w
   633  0710                     u275:
   634  0710  1C03               	skipc
   635  0711  2F13               	goto	u271
   636  0712  2F14               	goto	u270
   637  0713                     u271:
   638  0713  2F1A               	goto	l743
   639  0714                     u270:
   640  0714                     l741:
   641  0714  0870               	movf	___lwmod@divisor,w
   642  0715  02F2               	subwf	___lwmod@dividend,f
   643  0716  0871               	movf	___lwmod@divisor+1,w
   644  0717  1C03               	skipc
   645  0718  03F3               	decf	___lwmod@dividend+1,f
   646  0719  02F3               	subwf	___lwmod@dividend+1,f
   647  071A                     l743:
   648  071A  3001               	movlw	1
   649  071B                     u285:
   650  071B  1003               	clrc
   651  071C  0CF1               	rrf	___lwmod@divisor+1,f
   652  071D  0CF0               	rrf	___lwmod@divisor,f
   653  071E  3EFF               	addlw	-1
   654  071F  1D03               	skipz
   655  0720  2F1B               	goto	u285
   656  0721                     l745:
   657  0721  3001               	movlw	1
   658  0722  02F5               	subwf	___lwmod@counter,f
   659  0723  1D03               	btfss	3,2
   660  0724  2F26               	goto	u291
   661  0725  2F27               	goto	u290
   662  0726                     u291:
   663  0726  2F0A               	goto	l739
   664  0727                     u290:
   665  0727                     l747:
   666  0727  0873               	movf	___lwmod@dividend+1,w
   667  0728  00F1               	movwf	?___lwmod+1
   668  0729  0872               	movf	___lwmod@dividend,w
   669  072A  00F0               	movwf	?___lwmod
   670  072B                     l403:
   671  072B  0008               	return
   672  072C                     __end_of___lwmod:
   673                           
   674                           	psect	text2
   675  072C                     __ptext2:	
   676 ;; *************** function ___lwdiv *****************
   677 ;; Defined at:
   678 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  divisor         2    0[COMMON] unsigned int 
   681 ;;  dividend        2    2[COMMON] unsigned int 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  quotient        2    5[COMMON] unsigned int 
   684 ;;  counter         1    7[COMMON] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  2    0[COMMON] unsigned int 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         4       0       0       0       0
   695 ;;      Locals:         3       0       0       0       0
   696 ;;      Temps:          1       0       0       0       0
   697 ;;      Totals:         8       0       0       0       0
   698 ;;Total ram usage:        8 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           
   708                           ;psect for function ___lwdiv
   709  072C                     ___lwdiv:
   710  072C                     l703:	
   711                           ;incstack = 0
   712                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   713                           
   714  072C  01F5               	clrf	___lwdiv@quotient
   715  072D  01F6               	clrf	___lwdiv@quotient+1
   716  072E                     l705:
   717  072E  0870               	movf	___lwdiv@divisor,w
   718  072F  0471               	iorwf	___lwdiv@divisor+1,w
   719  0730  1903               	btfsc	3,2
   720  0731  2F33               	goto	u171
   721  0732  2F34               	goto	u170
   722  0733                     u171:
   723  0733  2F6B               	goto	l725
   724  0734                     u170:
   725  0734                     l707:
   726  0734  01F7               	clrf	___lwdiv@counter
   727  0735  0AF7               	incf	___lwdiv@counter,f
   728  0736  2F42               	goto	l713
   729  0737                     l709:
   730  0737  3001               	movlw	1
   731  0738                     u185:
   732  0738  1003               	clrc
   733  0739  0DF0               	rlf	___lwdiv@divisor,f
   734  073A  0DF1               	rlf	___lwdiv@divisor+1,f
   735  073B  3EFF               	addlw	-1
   736  073C  1D03               	skipz
   737  073D  2F38               	goto	u185
   738  073E                     l711:
   739  073E  3001               	movlw	1
   740  073F  00F4               	movwf	??___lwdiv
   741  0740  0874               	movf	??___lwdiv,w
   742  0741  07F7               	addwf	___lwdiv@counter,f
   743  0742                     l713:
   744  0742  1FF1               	btfss	___lwdiv@divisor+1,7
   745  0743  2F45               	goto	u191
   746  0744  2F46               	goto	u190
   747  0745                     u191:
   748  0745  2F37               	goto	l709
   749  0746                     u190:
   750  0746                     l715:
   751  0746  3001               	movlw	1
   752  0747                     u205:
   753  0747  1003               	clrc
   754  0748  0DF5               	rlf	___lwdiv@quotient,f
   755  0749  0DF6               	rlf	___lwdiv@quotient+1,f
   756  074A  3EFF               	addlw	-1
   757  074B  1D03               	skipz
   758  074C  2F47               	goto	u205
   759  074D  0871               	movf	___lwdiv@divisor+1,w
   760  074E  0273               	subwf	___lwdiv@dividend+1,w
   761  074F  1D03               	skipz
   762  0750  2F53               	goto	u215
   763  0751  0870               	movf	___lwdiv@divisor,w
   764  0752  0272               	subwf	___lwdiv@dividend,w
   765  0753                     u215:
   766  0753  1C03               	skipc
   767  0754  2F56               	goto	u211
   768  0755  2F57               	goto	u210
   769  0756                     u211:
   770  0756  2F5E               	goto	l721
   771  0757                     u210:
   772  0757                     l717:
   773  0757  0870               	movf	___lwdiv@divisor,w
   774  0758  02F2               	subwf	___lwdiv@dividend,f
   775  0759  0871               	movf	___lwdiv@divisor+1,w
   776  075A  1C03               	skipc
   777  075B  03F3               	decf	___lwdiv@dividend+1,f
   778  075C  02F3               	subwf	___lwdiv@dividend+1,f
   779  075D                     l719:
   780  075D  1475               	bsf	___lwdiv@quotient,0
   781  075E                     l721:
   782  075E  3001               	movlw	1
   783  075F                     u225:
   784  075F  1003               	clrc
   785  0760  0CF1               	rrf	___lwdiv@divisor+1,f
   786  0761  0CF0               	rrf	___lwdiv@divisor,f
   787  0762  3EFF               	addlw	-1
   788  0763  1D03               	skipz
   789  0764  2F5F               	goto	u225
   790  0765                     l723:
   791  0765  3001               	movlw	1
   792  0766  02F7               	subwf	___lwdiv@counter,f
   793  0767  1D03               	btfss	3,2
   794  0768  2F6A               	goto	u231
   795  0769  2F6B               	goto	u230
   796  076A                     u231:
   797  076A  2F46               	goto	l715
   798  076B                     u230:
   799  076B                     l725:
   800  076B  0876               	movf	___lwdiv@quotient+1,w
   801  076C  00F1               	movwf	?___lwdiv+1
   802  076D  0875               	movf	___lwdiv@quotient,w
   803  076E  00F0               	movwf	?___lwdiv
   804  076F                     l393:
   805  076F  0008               	return
   806  0770                     __end_of___lwdiv:
   807  007E                     btemp	set	126	;btemp
   808  007E                     wtemp0	set	126
   809                           
   810                           	psect	config
   811                           
   812                           ;Config register CONFIG @ 0x2007
   813                           ;	Oscillator Selection bits
   814                           ;	FOSC = HS, HS oscillator
   815                           ;	Watchdog Timer Enable bit
   816                           ;	WDTE = OFF, WDT disabled
   817                           ;	Power-up Timer Enable bit
   818                           ;	PWRTE = ON, PWRT enabled
   819                           ;	Brown-out Reset Enable bit
   820                           ;	BOREN = ON, BOR enabled
   821                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   822                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   823                           ;	Data EEPROM Memory Code Protection bit
   824                           ;	CPD = OFF, Data EEPROM code protection off
   825                           ;	Flash Program Memory Write Enable bits
   826                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   827                           ;	In-Circuit Debugger Mode bit
   828                           ;	DEBUG = 0x1, unprogrammed default
   829                           ;	Flash Program Memory Code Protection bit
   830                           ;	CP = OFF, Code protection off
   831  2007                     	org	8199
   832  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     22      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0     721
                                              8 COMMON     4     4      0
                                              0 BANK0     22    22      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 12 23:10:44 2021

                      pc 0002                       fsr 0004                      l403 072B  
                    l711 073E                      l703 072C                      l393 076F  
                    l721 075E                      l713 0742                      l705 072E  
                    l723 0765                      l715 0746                      l707 0734  
                    l731 06F8                      l717 0757                      l709 0737  
                    l725 076B                      l741 0714                      l733 06FB  
                    l719 075D                      l743 071A                      l735 0702  
                    l751 0770                      l745 0721                      l737 0706  
                    l729 06F2                      l761 0782                      l753 077E  
                    l739 070A                      l747 0727                      l771 07B0  
                    l763 0783                      l755 077F                      l773 07B9  
                    l765 0784                      l757 0780                      l775 07C4  
                    l767 0799                      l759 0781                      l777 07D7  
                    l769 07AF                      u210 0757                      u211 0756  
                    u300 078C                      u205 0747                      u230 076B  
                    u310 07A2                      u231 076A                      u215 0753  
                    u240 06F8                      u320 07B9                      u225 075F  
                    u241 06F7                      u321 07B8                      u170 0734  
                    u171 0733                      u260 070A                      u261 0709  
                    u190 0746                      u270 0714                      u191 0745  
                    u271 0713                      u255 06FC                      u185 0738  
                    u290 0727                      u291 0726                      u275 0710  
                    u285 071B                      fsr0 0004                      indf 0000  
            main@counter 0034                     _TMR1 000E                     _main 0770  
                   btemp 007E                     start 0000                    ?_main 0070  
           main@counter1 0035          __end_of___lwdiv 0770          __end_of___lwmod 072C  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0078                   _T1SYNC 0082                   _TMR1CS 0081  
                 _TMR1ON 0080                ??___lwdiv 0074                ??___lwmod 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 06DE  
             __pmaintext 0770                  _T1CKPS0 0084                  _T1CKPS1 0085  
                _T1OSCEN 0083        main@segments_code 0020                  ___lwdiv 072C  
                ___lwmod 06F2                  __ptext1 06F2                  __ptext2 072C  
   end_of_initialization 07FC      start_initialization 07EE               init_fetch0 06CB  
            __pdataBANK0 0036                ___latbits 0002            __pcstackBANK0 0020  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070                 ?___lwmod 0070  
       ___lwdiv@quotient 0075       main@segments_code1 002A         __size_of___lwdiv 0044  
       __size_of___lwmod 003A          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
          __size_of_main 007E                 main@F851 0040                 main@F854 0036  
               init_ram0 06CF         ___lwmod@dividend 0072          ___lwmod@divisor 0070  
        ___lwmod@counter 0075  
